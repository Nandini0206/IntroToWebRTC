<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title>Intro to WebRTC</title>
    <link rel="stylesheet" type="text/css" href="styles.css">
  </head>
  <body>
    <div>
      Video: <select id="camera"></select>
    </div>
    <video autoplay></video>

    <script>

      var videoArea = document.querySelector("video");
      var videoSelect = document.querySelector('#camera');
      navigator.mediaDevices.enumerateDevices()
          .then(getCameras)
          .catch((err) => {
        console.log(err.name + ": " + err.message);
    });

      videoSelect.onChange = startStream;

      startStream();

      function getCameras(devices) {
    devices.forEach(function (device) {
        var option = document.createElement('option');
        option.value = device.id;
        if (device.kind === 'videoinput') {
            option.text = device.label || 'camera ' + (videoSelect.length + 1);
            videoSelect.appendChild(option);
        }
      });
    }


      function startStream() {
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        var videoSource = videoSelect.value;
        var constraints = {audio: false,
           video: {
             mandatory: {
               minWidth: 640,
               maxWidth: 640,
               maxHeight: 360,
               maxHeight: 480
             },
             optional: [{
               sourceId: videoSource
             }]
           }
         };
         navigator.getUserMedia(constraints , onSuccess, onError)
      }

      function onSuccess(stream) {
        console.log("Success! We have a stream!");
        videoArea.srcObject = stream
        videoArea.className = "grayscale_filter";
        videoArea.play();
      }

      function onError(error) {
        console.log("Error with getUserMedia: ", error);
      }
    </script>
  </body>
</html>
